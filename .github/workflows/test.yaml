name: test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  generate:
    runs-on: windows-latest
    env:
      GOARCH: amd64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true
      - run: go get ./...
      - run: go generate -x ./...
      - uses: actions/upload-artifact@v4
        with:
          name: windows-amd64-libraries
          path: llm/llama.cpp/build/**/lib/*

  generate-cuda:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
      - run: go get ./...
      - run: go generate -x ./...
        env:
          OLLAMA_SKIP_CPU_GENERATE: '1'
      - uses: actions/upload-artifact@v4
        with:
          name: windows-cuda-libraries
          path: llm/llama.cpp/build/**/lib/*

  lint:
    runs-on: windows-latest
    env:
      GOARCH: amd64
      CGO_ENABLED: "1"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: false
      - run: |
          mkdir -p llm/llama.cpp/build/windows/amd64/stub/lib/
          touch llm/llama.cpp/build/windows/amd64/stub/lib/stub.dll
      - uses: golangci/golangci-lint-action@v3

  test:
    needs: [generate, generate-cuda]
    runs-on: windows-latest
    env:
      GOARCH: amd64
      CGO_ENABLED: "1"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true
      - run: go get
      - uses: actions/download-artifact@v4
        with:
          name: windows-amd64-libraries
          path: llm/llama.cpp/build
      - run: go build
      - run: go test -v ./...
      - uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: ollama

  release:
    needs: test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-binaries
          path: release
      - name: Create Release
        run: |
          TAG_NAME=$(date +'%Y%m%d%H%M%S')-$(git rev-parse --short HEAD)
          gh release create "$TAG_NAME" ./release/* --draft --title "New Release $TAG_NAME" --notes "Automated release $TAG_NAME"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}